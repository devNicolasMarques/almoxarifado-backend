// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String @unique
  password String
  position String
  created_at DateTime @default(now())
  reservation Reservation[]
}

model Teacher {
  id Int @id @default(autoincrement())
  name String 
  lastname String
  area String
  code  String?
  created_at DateTime @default(now())
  Reservation Reservation[]
}

model Course {
  id Int @id @default(autoincrement())
  name String
  workload Int
  class Class[]
}

model Class {
  id Int @id @default(autoincrement())
  code String
  courseId Int
  course Course @relation(fields: [courseId], references: [id])
  description String 
  Reservation Reservation[]
}

model Classroom {
  id Int @id @default(autoincrement())
  name String @unique
  capacity Int
  block Int
  Reservation Reservation[]
}

model Reservation {
  id Int @id @default(autoincrement())
  teacher Teacher? @relation(fields: [teacherId], references: [id])
  teacherId Int?
  classroom Classroom @relation(fields: [classroomId], references: [id])
  classroomId Int
  class Class @relation(fields: [classId], references: [id])
  classId Int
  user User @relation(fields: [userId], references: [id])
  userId Int
  uc String
  date DateTime
  description String
}
